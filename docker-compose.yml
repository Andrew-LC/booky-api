version: "3.9"  # optional, can remove

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookmarkdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    environment:
      PORT: 8080
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_DBNAME: bookmarkdb
      DB_SSLMODE: disable
      INSTANCE_ID: "${HOSTNAME}"
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=HostRegexp(`localhost|10.0.2.2`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

  proxy:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "8080:80"       # host â†’ Traefik
      - "8085:8080"     # dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - api

volumes:
  pgdata: